# NOTE: This is a template file. In production, secrets should be managed securely
# using tools like sealed-secrets, external-secrets-operator, or similar.
# Values shown here are placeholders and should be replaced with actual base64-encoded secrets.

apiVersion: v1
kind: Secret
metadata:
  name: stellaratlas-secrets
  namespace: stellaratlas
  labels:
    app.kubernetes.io/name: stellaratlas
    app.kubernetes.io/component: secrets
type: Opaque
data:
  # Database credentials (base64 encoded)
  # Example: echo -n "your_password" | base64
  POSTGRES_PASSWORD: cGxhY2Vob2xkZXJfcGFzc3dvcmQ=  # placeholder_password
  DATABASE_URL: cG9zdGdyZXNxbDovL3N0ZWxsYXJhdGxhc191c2VyOnBsYWNlaG9sZGVyX3Bhc3N3b3JkQHBvc3RncmVzLXNlcnZpY2U6NTQzMi9zdGVsbGFyYXRsYXM=
  
  # SMTP credentials (base64 encoded)
  SMTP_USERNAME: c210cF91c2VybmFtZQ==  # smtp_username
  SMTP_PASSWORD: c210cF9wYXNzd29yZA==  # smtp_password
  
  # JWT/Session secrets (base64 encoded)
  JWT_SECRET: eW91cl9qd3Rfc2VjcmV0X2hlcmU=  # your_jwt_secret_here
  SESSION_SECRET: eW91cl9zZXNzaW9uX3NlY3JldF9oZXJl  # your_session_secret_here
  
  # API Keys (base64 encoded)
  INTERNAL_API_KEY: aW50ZXJuYWxfYXBpX2tleQ==  # internal_api_key
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: stellaratlas
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
type: Opaque
data:
  # PostgreSQL credentials (base64 encoded)
  POSTGRES_PASSWORD: cGxhY2Vob2xkZXJfcGFzc3dvcmQ=  # placeholder_password
  POSTGRES_USER: c3RlbGxhcmF0bGFzX3VzZXI=        # stellaratlas_user